/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ParabolaSocial,
  ParabolaSocialInterface,
} from "../ParabolaSocial";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "applicationIds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subordinates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "superiors",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604080518082018252600880825267506f7261626f6c6160c01b6020808401828152855180870190965292855284015281519192916200005591600091620000e4565b5080516200006b906001906020840190620000e4565b50505062000088620000826200008e60201b60201c565b62000092565b620001d1565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620000f290620001a0565b90600052602060002090601f01602090048101928262000116576000855562000161565b82601f106200013157805160ff191683800117855562000161565b8280016001018555821562000161579182015b828111156200016157825182559160200191906001019062000144565b506200016f92915062000173565b5090565b5b808211156200016f576000815560010162000174565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620001b557607f821691505b60208210811415620001cb57620001cb6200018a565b50919050565b61156a80620001e16000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80638da5cb5b116100ad578063b88d4fde11610071578063b88d4fde14610278578063c87b56dd1461028b578063e985e9c51461029e578063f148b875146102b1578063f2fde38b146102e557600080fd5b80638da5cb5b146101fa57806395d89b411461020b5780639d874afd14610213578063a22cb4651461023c578063b47c32a11461024f57600080fd5b806323b872dd116100f457806323b872dd1461019957806342842e0e146101ac5780636352211e146101bf57806370a08231146101d2578063715018a6146101f257600080fd5b806301ffc9a71461012657806306fdde031461014f578063081812fc14610164578063095ea7b314610184575b600080fd5b610139610134366004610cbc565b6102f8565b6040516101469190610ce7565b60405180910390f35b61015761034a565b6040516101469190610d53565b610177610172366004610d75565b6103dc565b6040516101469190610db0565b610197610192366004610dd2565b610403565b005b6101976101a7366004610e0f565b610492565b6101976101ba366004610e0f565b6104c3565b6101776101cd366004610d75565b6104de565b6101e56101e0366004610e5f565b610513565b6040516101469190610e86565b610197610557565b6006546001600160a01b0316610177565b61015761056b565b610177610221366004610e5f565b6009602052600090815260409020546001600160a01b031681565b61019761024a366004610ea7565b61057a565b61017761025d366004610e5f565b6008602052600090815260409020546001600160a01b031681565b610197610286366004610fcd565b610589565b610157610299366004610d75565b6105c1565b6101396102ac36600461104c565b610635565b6101776102bf36600461107f565b80516020818301810180516007825292820191909301209152546001600160a01b031681565b6101976102f3366004610e5f565b610663565b60006001600160e01b031982166380ac58cd60e01b148061032957506001600160e01b03198216635b5e139f60e01b145b8061034457506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610359906110d0565b80601f0160208091040260200160405190810160405280929190818152602001828054610385906110d0565b80156103d25780601f106103a7576101008083540402835291602001916103d2565b820191906000526020600020905b8154815290600101906020018083116103b557829003601f168201915b5050505050905090565b60006103e78261069d565b506000908152600460205260409020546001600160a01b031690565b600061040e826104de565b9050806001600160a01b0316836001600160a01b0316141561044b5760405162461bcd60e51b81526004016104429061113e565b60405180910390fd5b336001600160a01b038216148061046757506104678133610635565b6104835760405162461bcd60e51b8152600401610442906111a8565b61048d83836106d1565b505050565b61049c338261073f565b6104b85760405162461bcd60e51b815260040161044290611202565b61048d83838361079e565b61048d83838360405180602001604052806000815250610589565b6000818152600260205260408120546001600160a01b0316806103445760405162461bcd60e51b815260040161044290611249565b60006001600160a01b03821661053b5760405162461bcd60e51b81526004016104429061129f565b506001600160a01b031660009081526003602052604090205490565b61055f6108c6565b61056960006108f0565b565b606060018054610359906110d0565b610585338383610942565b5050565b610593338361073f565b6105af5760405162461bcd60e51b815260040161044290611202565b6105bb848484846109e5565b50505050565b60606105cc8261069d565b60006105e360408051602081019091526000815290565b90506000815111610603576040518060200160405280600081525061062e565b8061060d84610a18565b60405160200161061e9291906112d1565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61066b6108c6565b6001600160a01b0381166106915760405162461bcd60e51b81526004016104429061132c565b61069a816108f0565b50565b6000818152600260205260409020546001600160a01b031661069a5760405162461bcd60e51b815260040161044290611249565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610706826104de565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061074b836104de565b9050806001600160a01b0316846001600160a01b0316148061077257506107728185610635565b806107965750836001600160a01b031661078b846103dc565b6001600160a01b0316145b949350505050565b826001600160a01b03166107b1826104de565b6001600160a01b0316146107d75760405162461bcd60e51b81526004016104429061137e565b6001600160a01b0382166107fd5760405162461bcd60e51b8152600401610442906113cf565b826001600160a01b0316610810826104de565b6001600160a01b0316146108365760405162461bcd60e51b81526004016104429061137e565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146105695760405162461bcd60e51b815260040161044290611411565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031614156109745760405162461bcd60e51b815260040161044290611455565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31906109d8908590610ce7565b60405180910390a3505050565b6109f084848461079e565b6109fc84848484610ab5565b6105bb5760405162461bcd60e51b8152600401610442906114b4565b60606000610a2583610bc2565b600101905060008167ffffffffffffffff811115610a4557610a45610eda565b6040519080825280601f01601f191660200182016040528015610a6f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610aa857610aad565b610a79565b509392505050565b60006001600160a01b0384163b15610bb757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610af99033908990889088906004016114c4565b602060405180830381600087803b158015610b1357600080fd5b505af1925050508015610b43575060408051601f3d908101601f19168201909252610b4091810190611513565b60015b610b9d573d808015610b71576040519150601f19603f3d011682016040523d82523d6000602084013e610b76565b606091505b508051610b955760405162461bcd60e51b8152600401610442906114b4565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610796565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c015772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c2d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c4b57662386f26fc10000830492506010015b6305f5e1008310610c63576305f5e100830492506008015b6127108310610c7757612710830492506004015b60648310610c89576064830492506002015b600a83106103445760010192915050565b6001600160e01b031981165b811461069a57600080fd5b803561034481610c9a565b600060208284031215610cd157610cd1600080fd5b60006107968484610cb1565b8015155b82525050565b602081016103448284610cdd565b60005b83811015610d10578181015183820152602001610cf8565b838111156105bb5750506000910152565b6000610d2b825190565b808452602084019350610d42818560208601610cf5565b601f01601f19169290920192915050565b6020808252810161062e8184610d21565b80610ca6565b803561034481610d64565b600060208284031215610d8a57610d8a600080fd5b60006107968484610d6a565b60006001600160a01b038216610344565b610ce181610d96565b602081016103448284610da7565b610ca681610d96565b803561034481610dbe565b60008060408385031215610de857610de8600080fd5b6000610df48585610dc7565b9250506020610e0585828601610d6a565b9150509250929050565b600080600060608486031215610e2757610e27600080fd5b6000610e338686610dc7565b9350506020610e4486828701610dc7565b9250506040610e5586828701610d6a565b9150509250925092565b600060208284031215610e7457610e74600080fd5b60006107968484610dc7565b80610ce1565b602081016103448284610e80565b801515610ca6565b803561034481610e94565b60008060408385031215610ebd57610ebd600080fd5b6000610ec98585610dc7565b9250506020610e0585828601610e9c565b634e487b7160e01b600052604160045260246000fd5b601f19601f830116810181811067ffffffffffffffff82111715610f1657610f16610eda565b6040525050565b6000610f2860405190565b9050610f348282610ef0565b919050565b600067ffffffffffffffff821115610f5357610f53610eda565b601f19601f83011660200192915050565b82818337506000910152565b6000610f83610f7e84610f39565b610f1d565b905082815260208101848484011115610f9e57610f9e600080fd5b610aad848285610f64565b600082601f830112610fbd57610fbd600080fd5b8135610796848260208601610f70565b60008060008060808587031215610fe657610fe6600080fd5b6000610ff28787610dc7565b945050602061100387828801610dc7565b935050604061101487828801610d6a565b925050606085013567ffffffffffffffff81111561103457611034600080fd5b61104087828801610fa9565b91505092959194509250565b6000806040838503121561106257611062600080fd5b600061106e8585610dc7565b9250506020610e0585828601610dc7565b60006020828403121561109457611094600080fd5b813567ffffffffffffffff8111156110ae576110ae600080fd5b61079684828501610fa9565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806110e457607f821691505b602082108114156110f7576110f76110ba565b50919050565b602181526000602082017f4552433732313a20617070726f76616c20746f2063757272656e74206f776e658152603960f91b602082015291505b5060400190565b60208082528101610344816110fd565b603d81526000602082017f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f81527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060208201529150611137565b602080825281016103448161114e565b602d81526000602082017f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6581526c1c881bdc88185c1c1c9bdd9959609a1b60208201529150611137565b60208082528101610344816111b8565b601881526000602082017f4552433732313a20696e76616c696420746f6b656e2049440000000000000000815291505b5060200190565b6020808252810161034481611212565b602981526000602082017f4552433732313a2061646472657373207a65726f206973206e6f7420612076618152683634b21037bbb732b960b91b60208201529150611137565b6020808252810161034481611259565b60006112b9825190565b6112c7818560208601610cf5565b9290920192915050565b60006112dd82856112af565b915061079682846112af565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b60208201529150611137565b60208082528101610344816112e9565b602581526000602082017f4552433732313a207472616e736665722066726f6d20696e636f72726563742081526437bbb732b960d91b60208201529150611137565b602080825281016103448161133c565b602481526000602082017f4552433732313a207472616e7366657220746f20746865207a65726f206164648152637265737360e01b60208201529150611137565b602080825281016103448161138e565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000611242565b60208082528101610344816113df565b601981526000602082017f4552433732313a20617070726f766520746f2063616c6c65720000000000000081529150611242565b6020808252810161034481611421565b603281526000602082017f4552433732313a207472616e7366657220746f206e6f6e20455243373231526581527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60208201529150611137565b6020808252810161034481611465565b608081016114d28287610da7565b6114df6020830186610da7565b6114ec6040830185610e80565b81810360608301526114fe8184610d21565b9695505050505050565b805161034481610c9a565b60006020828403121561152857611528600080fd5b6000610796848461150856fea2646970667358221220f98d252d54254150ffd2d1f8d88a6f3fdee094ad68a4481a650a7e08c0d0f09b64736f6c63430008090033";

export class ParabolaSocial__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ParabolaSocial> {
    return super.deploy(overrides || {}) as Promise<ParabolaSocial>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ParabolaSocial {
    return super.attach(address) as ParabolaSocial;
  }
  connect(signer: Signer): ParabolaSocial__factory {
    return super.connect(signer) as ParabolaSocial__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParabolaSocialInterface {
    return new utils.Interface(_abi) as ParabolaSocialInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ParabolaSocial {
    return new Contract(address, _abi, signerOrProvider) as ParabolaSocial;
  }
}
