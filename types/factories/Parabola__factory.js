"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.Parabola__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "T",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "E",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "interAxisX",
                type: "uint256",
            },
        ],
        name: "InvalidAxisX",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "x",
                type: "uint256",
            },
        ],
        name: "InvalidAxisY",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "interAxisX",
                type: "uint256",
            },
        ],
        name: "InvalidIntersectionAxisX",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "interAxisX",
                type: "uint256",
            },
        ],
        name: "InvalidIntersectionAxisY",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "T",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "E",
                type: "uint256",
            },
        ],
        name: "InvalidTE",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Approval",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "s",
                type: "uint256",
            },
        ],
        name: "Mint",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
        ],
        name: "Transfer",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
        ],
        name: "allowance",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "approve",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "b",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
        ],
        name: "balanceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "burn",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "account",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "burnFrom",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "c",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "decimals",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "subtractedValue",
                type: "uint256",
            },
        ],
        name: "decreaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "fee",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "spender",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "addedValue",
                type: "uint256",
            },
        ],
        name: "increaseAllowance",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "interAxisX",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "mint",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "name",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "nextStepVolume",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "ora",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "s",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "step",
        outputs: [
            {
                internalType: "uint128",
                name: "",
                type: "uint128",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "symbol",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "totalSupply",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transfer",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "from",
                type: "address",
            },
            {
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferFrom",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "s",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "e",
                type: "uint256",
            },
        ],
        name: "volume",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
var _bytecode = "0x60806040527601fd51291300000000000000000000000000e8d4a510006006556000600b553480156200003157600080fd5b5060405162001b0838038062001b08833981016040819052620000549162000513565b604080518082018252600d81526c2830b930b137b6309021b7b4b760991b6020808301918252835180850190945260048452635061726160e01b908401528151919291620000a59160039162000465565b508051620000bb90600490602084019062000465565b505050620000d8620000d26200025160201b60201c565b62000255565b80818260020202028260030211156200011357818160405163b1c0463d60e01b81526004016200010a92919062000556565b60405180910390fd5b806002028260030210156200014157818160405163b1c0463d60e01b81526004016200010a92919062000556565b816003028182836002020202816200015d576200015d6200056a565b04600855600980546001600160801b03191690556002810260038302816200018957620001896200056a565b04600a8190556000600b55600854620001b891620001a79162000596565b620002a760201b6200088d1760201c565b60078190556006546001600160801b03161115620001ef57600754604051632d54633960e21b81526004016200010a9190620005b8565b6008546007548002816200020757620002076200056a565b600754600954600a54939092046001600160801b0390921602909101101562000249576007546040516318f0f4f160e21b81526004016200010a9190620005b8565b50506200060c565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600081620002b757506000919050565b60006001620002c684620003b0565b901c6001901b90506001818481620002e257620002e26200056a565b048201901c90506001818481620002fd57620002fd6200056a565b048201901c905060018184816200031857620003186200056a565b048201901c905060018184816200033357620003336200056a565b048201901c905060018184816200034e576200034e6200056a565b048201901c905060018184816200036957620003696200056a565b048201901c905060018184816200038457620003846200056a565b048201901c9050620003a981828581620003a257620003a26200056a565b046200044d565b9392505050565b600080608083901c15620003c657608092831c92015b604083901c15620003d957604092831c92015b602083901c15620003ec57602092831c92015b601083901c15620003ff57601092831c92015b600883901c156200041257600892831c92015b600483901c156200042557600492831c92015b600283901c156200043857600292831c92015b600183901c1562000447576001015b92915050565b60008183106200045e5781620003a9565b5090919050565b8280546200047390620005db565b90600052602060002090601f016020900481019282620004975760008555620004e2565b82601f10620004b257805160ff1916838001178555620004e2565b82800160010185558215620004e2579182015b82811115620004e2578251825591602001919060010190620004c5565b50620004f0929150620004f4565b5090565b5b80821115620004f05760008155600101620004f5565b805162000447565b600080604083850312156200052b576200052b600080fd5b60006200053985856200050b565b92505060206200054c858286016200050b565b9150509250929050565b82815260408101620003a960208301849052565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615620005b357620005b362000580565b500290565b8181526020810162000447565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620005f057607f821691505b60208210811415620006065762000606620005c5565b50919050565b6114ec806200061c6000396000f3fe6080604052600436106101815760003560e01c806379cc6790116100d1578063a457c2d71161008a578063dd62ed3e11610064578063dd62ed3e14610422578063ddca3f4314610442578063e25fe17514610469578063f2fde38b1461048957600080fd5b8063a457c2d7146103cc578063a9059cbb146103ec578063c3da42b81461040c57600080fd5b806379cc6790146103255780637ac72534146103455780637fad57951461036557806386b714e21461037b5780638da5cb5b1461039157806395d89b41146103b757600080fd5b8063313ce5671161013e5780634df7e3d0116101185780634df7e3d01461029757806370a08231146102c4578063715018a6146102fa57806374d1bc8c1461030f57600080fd5b8063313ce5671461023b578063395093511461025757806342966c681461027757600080fd5b806306fdde0314610186578063095ea7b3146101b15780631249c58b146101de57806318160ddd146101e857806323b872dd14610206578063298fec1814610226575b600080fd5b34801561019257600080fd5b5061019b6104a9565b6040516101a89190610e31565b60405180910390f35b3480156101bd57600080fd5b506101d16101cc366004610e83565b61053b565b6040516101a89190610eca565b6101e6610555565b005b3480156101f457600080fd5b506002545b6040516101a89190610ede565b34801561021257600080fd5b506101d1610221366004610eec565b6106dd565b34801561023257600080fd5b506101f9610703565b34801561024757600080fd5b5060126040516101a89190610f45565b34801561026357600080fd5b506101d1610272366004610e83565b610728565b34801561028357600080fd5b506101e6610292366004610f53565b61074a565b3480156102a357600080fd5b506009546102b7906001600160801b031681565b6040516101a89190610f8b565b3480156102d057600080fd5b506101f96102df366004610f99565b6001600160a01b031660009081526020819052604090205490565b34801561030657600080fd5b506101e6610757565b34801561031b57600080fd5b506101f960085481565b34801561033157600080fd5b506101e6610340366004610e83565b610769565b34801561035157600080fd5b506101f9610360366004610fba565b610782565b34801561037157600080fd5b506101f960075481565b34801561038757600080fd5b506101f9600b5481565b34801561039d57600080fd5b506005546001600160a01b03166040516101a89190610fe5565b3480156103c357600080fd5b5061019b6107c6565b3480156103d857600080fd5b506101d16103e7366004610e83565b6107d5565b3480156103f857600080fd5b506101d1610407366004610e83565b61081d565b34801561041857600080fd5b506101f9600a5481565b34801561042e57600080fd5b506101f961043d366004610ff3565b61082b565b34801561044e57600080fd5b506006546102b790600160801b90046001600160801b031681565b34801561047557600080fd5b506006546102b7906001600160801b031681565b34801561049557600080fd5b506101e66104a4366004610f99565b610856565b6060600380546104b89061103c565b80601f01602080910402602001604051908101604052809291908181526020018280546104e49061103c565b80156105315780601f1061050657610100808354040283529160200191610531565b820191906000526020600020905b81548152906001019060200180831161051457829003601f168201915b5050505050905090565b600033610549818585610972565b60019150505b92915050565b600754600b541061058a57600b5460075460405163bf5cf7e560e01b8152600401610581929190611069565b60405180910390fd5b600854600b5480028161059f5761059f611084565b600b54600954600a54939092046001600160801b039092160290910110156105de57600b54604051630c1ddb8960e11b81526004016105819190610ede565b3360006105e9610703565b90506105f58282610a26565b600654600b80546001600160801b03909216916000906106169084906110b0565b9091555050600b546040517f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f9161065091859185916110e7565b60405180910390a15050600754600b54111561068757600b5460075460405163bf5cf7e560e01b8152600401610581929190611069565b600854600b5480028161069c5761069c611084565b600b54600954600a54939092046001600160801b039092160290910110156106db57600b54604051630c1ddb8960e11b81526004016105819190610ede565b565b6000336106eb858285610abc565b6106f6858585610b06565b60019150505b9392505050565b600b5460065460009161072391610360906001600160801b0316826110b0565b905090565b60003361054981858561073b838361082b565b61074591906110b0565b610972565b6107543382610bf6565b50565b61075f610cad565b6106db6000610cd7565b610774823383610abc565b61077e8282610bf6565b5050565b6000600360085483848502028586870202868603600a5460085460030202020103816107b0576107b0611084565b04816107be576107be611084565b049392505050565b6060600480546104b89061103c565b600033816107e3828661082b565b9050838110156108055760405162461bcd60e51b815260040161058190611154565b6108128286868403610972565b506001949350505050565b600033610549818585610b06565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61085e610cad565b6001600160a01b0381166108845760405162461bcd60e51b8152600401610581906111a7565b61075481610cd7565b60008161089c57506000919050565b600060016108a984610d29565b901c6001901b905060018184816108c2576108c2611084565b048201901c905060018184816108da576108da611084565b048201901c905060018184816108f2576108f2611084565b048201901c9050600181848161090a5761090a611084565b048201901c9050600181848161092257610922611084565b048201901c9050600181848161093a5761093a611084565b048201901c9050600181848161095257610952611084565b048201901c90506106fc8182858161096c5761096c611084565b04610dbd565b6001600160a01b0383166109985760405162461bcd60e51b8152600401610581906111f8565b6001600160a01b0382166109be5760405162461bcd60e51b815260040161058190611247565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a19908590610ede565b60405180910390a3505050565b6001600160a01b038216610a4c5760405162461bcd60e51b81526004016105819061128e565b8060026000828254610a5e91906110b0565b90915550506001600160a01b038216600081815260208190526040808220805485019055517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ab0908590610ede565b60405180910390a35050565b6000610ac8848461082b565b90506000198114610b005781811015610af35760405162461bcd60e51b8152600401610581906112d2565b610b008484848403610972565b50505050565b6001600160a01b038316610b2c5760405162461bcd60e51b815260040161058190611324565b6001600160a01b038216610b525760405162461bcd60e51b815260040161058190611374565b6001600160a01b03831660009081526020819052604090205481811015610b8b5760405162461bcd60e51b8152600401610581906113c7565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610be9908690610ede565b60405180910390a3610b00565b6001600160a01b038216610c1c5760405162461bcd60e51b815260040161058190611415565b6001600160a01b03821660009081526020819052604090205481811015610c555760405162461bcd60e51b815260040161058190611464565b6001600160a01b0383166000818152602081905260408082208585039055600280548690039055519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a19908690610ede565b6005546001600160a01b031633146106db5760405162461bcd60e51b8152600401610581906114a6565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080608083901c15610d3e57608092831c92015b604083901c15610d5057604092831c92015b602083901c15610d6257602092831c92015b601083901c15610d7457601092831c92015b600883901c15610d8657600892831c92015b600483901c15610d9857600492831c92015b600283901c15610daa57600292831c92015b600183901c1561054f5760010192915050565b6000818310610dcc57816106fc565b5090919050565b60005b83811015610dee578181015183820152602001610dd6565b83811115610b005750506000910152565b6000610e09825190565b808452602084019350610e20818560208601610dd3565b601f01601f19169290920192915050565b602080825281016106fc8184610dff565b60006001600160a01b03821661054f565b610e5c81610e42565b811461075457600080fd5b803561054f81610e53565b80610e5c565b803561054f81610e72565b60008060408385031215610e9957610e99600080fd5b6000610ea58585610e67565b9250506020610eb685828601610e78565b9150509250929050565b8015155b82525050565b6020810161054f8284610ec0565b80610ec4565b6020810161054f8284610ed8565b600080600060608486031215610f0457610f04600080fd5b6000610f108686610e67565b9350506020610f2186828701610e67565b9250506040610f3286828701610e78565b9150509250925092565b60ff8116610ec4565b6020810161054f8284610f3c565b600060208284031215610f6857610f68600080fd5b6000610f748484610e78565b949350505050565b6001600160801b038116610ec4565b6020810161054f8284610f7c565b600060208284031215610fae57610fae600080fd5b6000610f748484610e67565b60008060408385031215610fd057610fd0600080fd5b6000610ea58585610e78565b610ec481610e42565b6020810161054f8284610fdc565b6000806040838503121561100957611009600080fd5b60006110158585610e67565b9250506020610eb685828601610e67565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061105057607f821691505b6020821081141561106357611063611026565b50919050565b604081016110778285610ed8565b6106fc6020830184610ed8565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156110c3576110c361109a565b500190565b600061054f82610e42565b600061054f826110c8565b610ec4816110d3565b606081016110f582866110de565b6111026020830185610ed8565b610f746040830184610ed8565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77815264207a65726f60d81b602082015291505b5060400190565b6020808252810161054f8161110f565b602681526000602082017f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206181526564647265737360d01b6020820152915061114d565b6020808252810161054f81611164565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b6020820152915061114d565b6020808252810161054f816111b7565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b6020820152915061114d565b6020808252810161054f81611208565b601f81526000602082017f45524332303a206d696e7420746f20746865207a65726f206164647265737300815291505b5060200190565b6020808252810161054f81611257565b601d81526000602082017f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000081529150611287565b6020808252810161054f8161129e565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b6020820152915061114d565b6020808252810161054f816112e2565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b6020820152915061114d565b6020808252810161054f81611334565b602681526000602082017f45524332303a207472616e7366657220616d6f756e7420657863656564732062815265616c616e636560d01b6020820152915061114d565b6020808252810161054f81611384565b602181526000602082017f45524332303a206275726e2066726f6d20746865207a65726f206164647265738152607360f81b6020820152915061114d565b6020808252810161054f816113d7565b602281526000602082017f45524332303a206275726e20616d6f756e7420657863656564732062616c616e815261636560f01b6020820152915061114d565b6020808252810161054f81611425565b60208082527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657291019081526000611287565b6020808252810161054f8161147456fea26469706673582212206298ee348b144e0591835e662a4e7d4727b8fdc6d340a4286b4f5aeafe430c8364736f6c63430008090033";
var Parabola__factory = /** @class */ (function (_super) {
    __extends(Parabola__factory, _super);
    function Parabola__factory() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var _this = this;
        if (args.length === 1) {
            _this = _super.call(this, _abi, _bytecode, args[0]) || this;
        }
        else {
            _this = _super.apply(this, args) || this;
        }
        return _this;
    }
    Parabola__factory.prototype.deploy = function (T, E, overrides) {
        return _super.prototype.deploy.call(this, T, E, overrides || {});
    };
    Parabola__factory.prototype.getDeployTransaction = function (T, E, overrides) {
        return _super.prototype.getDeployTransaction.call(this, T, E, overrides || {});
    };
    Parabola__factory.prototype.attach = function (address) {
        return _super.prototype.attach.call(this, address);
    };
    Parabola__factory.prototype.connect = function (signer) {
        return _super.prototype.connect.call(this, signer);
    };
    Parabola__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    Parabola__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    Parabola__factory.bytecode = _bytecode;
    Parabola__factory.abi = _abi;
    return Parabola__factory;
}(ethers_1.ContractFactory));
exports.Parabola__factory = Parabola__factory;
